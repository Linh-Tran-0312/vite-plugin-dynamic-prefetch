export const PREFETCH_LINK_MARK = 'VITE_PREFETCH_LINK_MARK';

export function createIsPrefetchLinkInHead() {
  return `{
    /* Helper method generated by vite-plugin-dynamic-prefetch */
    window.viteDynamicPrefetchPlugin = {
      isPrefetchLinkInHead: function(src) {
        const absoluteSrc = new URL(src, document.baseURI).href;
        const headLinks = document.head.getElementsByTagName('link');
        for (let link of headLinks) {
          if (link.rel === 'prefetch' && link.href === absoluteSrc) {
            return true;
          }
        }
        return false;
      }
    };
  }
  `;
}
export function createPrefetchLinkElement(link: string) {
  return `{ 
    /* Prefetched link generated by vite-plugin-dynamic-prefetch */
    const isPrefetchLinkAdded = window.viteDynamicPrefetchPlugin.isPrefetchLinkInHead('${PREFETCH_LINK_MARK}${link}')
    if(!isPrefetchLinkAdded) {
      const linkElement = document.createElement('link');
      linkElement.rel = 'prefetch';
      linkElement.href = '${PREFETCH_LINK_MARK}${link}';
      document.head.appendChild(linkElement);
    }
  };
  `;
}

export function getPreversedTransformation(
  sourceMapEnabled: boolean,
  code: string
) {
  if (sourceMapEnabled) {
    return { code, map: null };
  }
  return code;
}
export function getActualLink(
  basePath: string,
  importPath: string,
  fileNameByImport: Map<string, string>
) {
  const fileName = fileNameByImport.get(importPath);
  if (!fileName) {
    throw Error('Can not find file name for import path: ' + importPath);
  }
  return `${basePath}${fileName}`;
}
